plugins {
	id 'org.springframework.boot' version '2.7.1'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.mysite'
version = '0.0.6'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'				// developmentOnly : 개발환경에만 적용, 배포시에는 이 설정은 제외됨
	compileOnly 'org.projectlombok:lombok'										// compileOnly : compileOnly는 해당 라이브러리가 컴파일 단계에서만 필요한 경우에 사용
    annotationProcessor 'org.projectlombok:lombok'								// annotationProcessor : 컴파일 단계에서 애너테이션을 분석하고 처리하기 위해 사용한다.
	runtimeOnly 'com.h2database:h2'												// runtimeOnly : 런타임(Runtime)시에만 필요한 경우에 사용
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'		// 라이브러리 설치를 위해 일반적으로 사용하는 설정. 해당 라이브러리가 변경되더라도 이 라이브러리와 연관된 모든 모듈들을 컴파일하지 않고 직접 관련이 있는 모듈들만 컴파일하기 때문에 rebuild 속도가 빠르다
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'		// thymeleaf : java 코드에 삽입할 수 있는 템플릿 엔진
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect'
    implementation 'org.springframework.boot:spring-boot-starter-validation'	// Spring Boot Validation : 화면에서 전달받은 입력값 검증 라이브러리.
	implementation 'org.springframework.boot:spring-boot-starter-security'		// Spring Security 설치
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'		// Spring Security 와 관련된 Thymeleaf 라이브러리
	implementation 'org.commonmark:commonmark:0.18.2'							// Markdown 라이브러리
	runtimeOnly 'org.postgresql:postgresql'										// PostgreSQL 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-mail'			// java SMTP
}

tasks.named('test') {
	useJUnitPlatform()
}
